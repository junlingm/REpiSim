% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TexFormatter.R
\docType{class}
\name{TexFormatter}
\alias{TexFormatter}
\title{R6 class to typeset R expressions as latex equations}
\description{
R6 class to typeset R expressions as latex equations

R6 class to typeset R expressions as latex equations
}
\examples{

## ------------------------------------------------
## Method `TexFormatter$new`
## ------------------------------------------------

tex = TexFormatter$new(II="[I\gets I]")
tex$typeset(quote(sin(alpha*I)/II))

## ------------------------------------------------
## Method `TexFormatter$set.symbols`
## ------------------------------------------------

tex = TexFormatter$new(II="[I\gets I]")
tex$set.symbols(list(alpha="a")$typeset(quote(sin(alpha*I)/II))
description typeset an R expression

## ------------------------------------------------
## Method `TexFormatter$typeset`
## ------------------------------------------------

tex = TexFormatter$new(II="[I\gets I]")
tex$typeset(quote(sin(alpha*I)/II))

## ------------------------------------------------
## Method `TexFormatter$enclose`
## ------------------------------------------------

tex = TexFormatter$new()
tex$enclose("\\\\bf This is a test")
tex$enclose(tex$typeset.equation(quote(alpha==beta)), 
  closure=c("\\\\begin{align}", "\\\\end{align}"))

## ------------------------------------------------
## Method `TexFormatter$command`
## ------------------------------------------------

tex=TexFormatter$new()
tex$command("textcolor", "blue", "this text is blue")
tex$command("documentclass", argument="article", option="12pt")

## ------------------------------------------------
## Method `TexFormatter$environment`
## ------------------------------------------------

tex = TexFormatter$new()
tex$environment("frame", argument="frame title", "line 1", "line 2")

## ------------------------------------------------
## Method `TexFormatter$typeset.equation`
## ------------------------------------------------

SIR = Model$new(
  title = "SIR",
  S ~ -beta*S*I/N, # the dS/dt equation
  I ~ beta*S*I/N - gamma*I, # the dI/dt equation
  R ~ gamma*I, # the dR/dt equation
  N = S + I + R # the total population N
)
tex = TexFormatter$new()
tex$typeset.equation(SIR$equations$equations)
tex$typeset.equation(SIR$equations$where)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{symbols}}{a named list that matches R names (names in the list)
to latex symbols (values in the list). Trig functions, greek letters
and infinity are altomatically defined. They do not need to be defined 
in this list.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{TexFormatter$new()}}
\item \href{#method-set.symbols}{\code{TexFormatter$set.symbols()}}
\item \href{#method-typeset}{\code{TexFormatter$typeset()}}
\item \href{#method-enclose}{\code{TexFormatter$enclose()}}
\item \href{#method-command}{\code{TexFormatter$command()}}
\item \href{#method-environment}{\code{TexFormatter$environment()}}
\item \href{#method-typeset.equation}{\code{TexFormatter$typeset.equation()}}
\item \href{#method-format}{\code{TexFormatter$format()}}
\item \href{#method-clone}{\code{TexFormatter$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
constructor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TexFormatter$new(symbols = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbols}}{a named list that matches R names (names in the list)
to latex symbols (values in the list). Trig functions, greek letters
and infinity are automatically defined. They do not need to be defined 
in this list. But they may be redefined here}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tex = TexFormatter$new(II="[I\gets I]")
tex$typeset(quote(sin(alpha*I)/II))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set.symbols"></a>}}
\if{latex}{\out{\hypertarget{method-set.symbols}{}}}
\subsection{Method \code{set.symbols()}}{
set/change the tex symbols of R names
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TexFormatter$set.symbols(symbols)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{symbols}}{a named list that matches R names (names in the list)
to latex symbols (values in the list). Trig functions, greek letters
and infinity are automatically defined. They do not need to be defined 
in this list. But they may be redefined here}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
an invisible self to chain methods
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tex = TexFormatter$new(II="[I\gets I]")
tex$set.symbols(list(alpha="a")$typeset(quote(sin(alpha*I)/II))
description typeset an R expression
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-typeset"></a>}}
\if{latex}{\out{\hypertarget{method-typeset}{}}}
\subsection{Method \code{typeset()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TexFormatter$typeset(R)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{R}}{the R expression to be typeset.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a character holding the latex commands
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tex = TexFormatter$new(II="[I\gets I]")
tex$typeset(quote(sin(alpha*I)/II))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-enclose"></a>}}
\if{latex}{\out{\hypertarget{method-enclose}{}}}
\subsection{Method \code{enclose()}}{
enclose the tex commands in brackets
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TexFormatter$enclose(..., closure = c("{", "}"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{the tex commands to enclose}

\item{\code{closure}}{a character vector of the brackets to be used. It defaults to `c("{","}")`.
If the vector is length 1, then it is used as both the opening and closing bracket.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the enclosed tex command
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tex = TexFormatter$new()
tex$enclose("\\\\bf This is a test")
tex$enclose(tex$typeset.equation(quote(alpha==beta)), 
  closure=c("\\\\begin{align}", "\\\\end{align}"))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-command"></a>}}
\if{latex}{\out{\hypertarget{method-command}{}}}
\subsection{Method \code{command()}}{
generate a latex command
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TexFormatter$command(name, ..., argument = NULL, option = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{the name of the latex command.}

\item{\code{...}}{the arguments of the latex command.}

\item{\code{argument}}{a character vector as an alternative way to provide arguments for the latex command}

\item{\code{option}}{the optional argument to latex command (the one that is enclosed in square brackets.)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a character holding the latex command
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tex=TexFormatter$new()
tex$command("textcolor", "blue", "this text is blue")
tex$command("documentclass", argument="article", option="12pt")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-environment"></a>}}
\if{latex}{\out{\hypertarget{method-environment}{}}}
\subsection{Method \code{environment()}}{
generate a latex environment
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TexFormatter$environment(name, ..., argument = NULL, option = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{the name of the latex environment}

\item{\code{...}}{the contents of the latex environment}

\item{\code{argument}}{a named list to provide arguments for the latex environment}

\item{\code{option}}{the optional argument to latex environment (the one that is enclosed in square brackets.)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a character holding the latex environment
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{tex = TexFormatter$new()
tex$environment("frame", argument="frame title", "line 1", "line 2")
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-typeset.equation"></a>}}
\if{latex}{\out{\hypertarget{method-typeset.equation}{}}}
\subsection{Method \code{typeset.equation()}}{
typeset a system of equations 

This method typesets a system of equations that can be used as the
content of a latex align or eqnarray environments.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TexFormatter$typeset.equation(equations, align = c("left", "right", "both"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{equations}}{a list of equations or inequalities. The left and right sides 
of the equations may be connected using "<-" or "==".}

\item{\code{align}}{can be one of "left", "right", "both", which specifies if the
ampersand (&) is placed on the left, right or both sides of the equal (or other 
comparison) sign. The default value is left.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Note that the latex environment itself (e.g., \\begin{align}\\end{align}) is not returned.
}

\subsection{Returns}{
a character holding the latex commands.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{SIR = Model$new(
  title = "SIR",
  S ~ -beta*S*I/N, # the dS/dt equation
  I ~ beta*S*I/N - gamma*I, # the dI/dt equation
  R ~ gamma*I, # the dR/dt equation
  N = S + I + R # the total population N
)
tex = TexFormatter$new()
tex$typeset.equation(SIR$equations$equations)
tex$typeset.equation(SIR$equations$where)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-format"></a>}}
\if{latex}{\out{\hypertarget{method-format}{}}}
\subsection{Method \code{format()}}{
a text representation of the class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TexFormatter$format()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TexFormatter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
